{{define "dataType" -}}
    {{if Contains .dataType "bigint" -}}int64
    {{- else if Contains .dataType "tinyint"}}int8
    {{- else if Contains .dataType "int"}}int
    {{- else if Contains .dataType "varchar"}}string
    {{- else if Contains .dataType "decimal"}}{{if IsGE .numericPrecision 18}}float64{{else}}float32{{end}}
    {{- else if Contains .dataType "text"}}string
    {{- end}}
{{- end -}}
package dto

import "{{$.moduleName}}/pkg/util"


// {{.table.tableName | Pascal}}Form 表单:{{.table.tableComment}}
type {{.table.tableName | Pascal}}Form struct {
    util.Request
{{- range $k,$v := .table.columns -}}
    {{- if or (Contains $v.columnName "id") (Contains $v.columnName "status")}}
        {{$v.columnName | Pascal}} {{template "dataType" $v}} `json:"{{$v.columnName | Camel}}"` // {{$v.columnComment}}
        {{$v.columnName | Pascal}}List []{{template "dataType" $v}} `json:"{{$v.columnName | Camel}}List"` // {{$v.columnComment | Breaker}}列表
    {{- else if Contains $v.columnName "_time"}}
        {{$v.columnName | Pascal}} []{{template "dataType" $v}} `json:"{{$v.columnName | Camel}}"` // {{$v.columnComment}}
    {{- else if Contains $v.columnName "sort" -}}
    {{- else}}
        {{$v.columnName | Pascal}} {{template "dataType" $v}} `json:"{{$v.columnName | Camel}}"` // {{$v.columnComment}}
    {{- end -}}
{{end}}
}
